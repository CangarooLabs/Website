{"ast":null,"code":"var _jsxFileName = \"E:\\\\personal\\\\react\\\\my-app\\\\src\\\\components\\\\ParticleBg.jsx\";\nimport React from 'react';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport \"./ParticleBg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBg = () => {\n  const particlesInit = async main => {\n    console.log(main);\n    await loadFull(main);\n  };\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    options: {\n      fullScreen: {\n        enable: true,\n        zIndex: -1\n      },\n      particles: {\n        preset: 'parallax',\n        // Use the \"parallax\" preset\n        color: {\n          value: '#000000' // Set the particle color to white\n        }\n      },\n      background: {\n        color: '#000000',\n        // Set the background color to black\n        image: '',\n        position: '50% 50%',\n        repeat: 'no-repeat',\n        size: 'cover'\n      },\n      interactivity: {\n        events: {\n          onhover: {\n            enable: true,\n            mode: 'repulse'\n          }\n        }\n      },\n      retina_detect: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ParticleBg;\nexport default ParticleBg;\nvar _c;\n$RefreshReg$(_c, \"ParticleBg\");","map":{"version":3,"names":["React","Particles","loadFull","jsxDEV","_jsxDEV","ParticleBg","particlesInit","main","console","log","id","init","options","fullScreen","enable","zIndex","particles","preset","color","value","background","image","position","repeat","size","interactivity","events","onhover","mode","retina_detect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/personal/react/my-app/src/components/ParticleBg.jsx"],"sourcesContent":["import React from 'react'\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport \"./ParticleBg.css\"\r\n\r\nconst ParticleBg = () => {\r\n    const particlesInit = async (main) => {\r\n        console.log(main);\r\n        await loadFull(main);\r\n      };\r\n\r\n      \r\n\r\n\r\n  return (\r\n    \r\n    <Particles\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      options={{\r\n        fullScreen: {\r\n          enable: true,\r\n          zIndex: -1,\r\n        },\r\n        particles: {\r\n          preset: 'parallax', // Use the \"parallax\" preset\r\n          color: {\r\n            value: '#000000', // Set the particle color to white\r\n          },\r\n        },\r\n        background: {\r\n          color: '#000000', // Set the background color to black\r\n          image: '',\r\n          position: '50% 50%',\r\n          repeat: 'no-repeat',\r\n          size: 'cover',\r\n        },\r\n        interactivity: {\r\n          events: {\r\n            onhover: {\r\n              enable: true,\r\n              mode: 'repulse',\r\n            },\r\n          },\r\n        },\r\n        retina_detect: true,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ParticleBg"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,MAAML,QAAQ,CAACK,IAAI,CAAC;EACtB,CAAC;EAKL,oBAEEH,OAAA,CAACH,SAAS;IACRS,EAAE,EAAC,aAAa;IAChBC,IAAI,EAAEL,aAAc;IACpBM,OAAO,EAAE;MACPC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QACZC,MAAM,EAAE,CAAC;MACX,CAAC;MACDC,SAAS,EAAE;QACTC,MAAM,EAAE,UAAU;QAAE;QACpBC,KAAK,EAAE;UACLC,KAAK,EAAE,SAAS,CAAE;QACpB;MACF,CAAC;MACDC,UAAU,EAAE;QACVF,KAAK,EAAE,SAAS;QAAE;QAClBG,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,SAAS;QACnBC,MAAM,EAAE,WAAW;QACnBC,IAAI,EAAE;MACR,CAAC;MACDC,aAAa,EAAE;QACbC,MAAM,EAAE;UACNC,OAAO,EAAE;YACPb,MAAM,EAAE,IAAI;YACZc,IAAI,EAAE;UACR;QACF;MACF,CAAC;MACDC,aAAa,EAAE;IACjB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAAC,EAAA,GA5CK7B,UAAU;AA8ChB,eAAeA,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}