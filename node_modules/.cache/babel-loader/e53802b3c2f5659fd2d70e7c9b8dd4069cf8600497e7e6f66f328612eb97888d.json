{"ast":null,"code":"var _jsxFileName = \"E:\\\\personal\\\\react\\\\my-app\\\\src\\\\components\\\\ParticleBg.jsx\";\nimport React from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from 'tsparticles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBg = ({\n  data\n}) => {\n  const particlesInit = async main => {\n    console.log(main);\n    await loadFull(main);\n  };\n\n  // Add a check to ensure data.groups is an array\n  const groupsArray = Array.isArray(data.groups) ? data.groups : [];\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    options: {\n      autoPlay: true,\n      background: {\n        color: {\n          value: '#0d47a1'\n        },\n        image: '',\n        position: '',\n        repeat: '',\n        size: '',\n        opacity: 1\n      },\n      backgroundMask: {\n        composite: 'destination-out',\n        cover: {\n          color: {\n            value: '#fff'\n          },\n          opacity: 1\n        },\n        enable: false\n      },\n      clear: true,\n      defaultThemes: {},\n      // ... (your existing options)\n      particles: {\n        // ... (your existing particles options)\n        groups: groupsArray // Use the checked array here\n      }\n      // ... (your existing options)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = ParticleBg;\nexport default ParticleBg;\nvar _c;\n$RefreshReg$(_c, \"ParticleBg\");","map":{"version":3,"names":["React","Particles","loadFull","jsxDEV","_jsxDEV","ParticleBg","data","particlesInit","main","console","log","groupsArray","Array","isArray","groups","id","init","options","autoPlay","background","color","value","image","position","repeat","size","opacity","backgroundMask","composite","cover","enable","clear","defaultThemes","particles","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/personal/react/my-app/src/components/ParticleBg.jsx"],"sourcesContent":["import React from 'react';\r\nimport Particles from 'react-tsparticles';\r\nimport { loadFull } from 'tsparticles';\r\n\r\nconst ParticleBg = ({ data }) => {\r\n    const particlesInit = async (main) => {\r\n        console.log(main);\r\n        await loadFull(main);\r\n    };\r\n\r\n    // Add a check to ensure data.groups is an array\r\n    const groupsArray = Array.isArray(data.groups) ? data.groups : [];\r\n\r\n    return (\r\n        <Particles\r\n            id=\"tsparticles\"\r\n            init={particlesInit}\r\n            options={{\r\n                autoPlay: true,\r\n                background: {\r\n                    color: {\r\n                        value: '#0d47a1',\r\n                    },\r\n                    image: '',\r\n                    position: '',\r\n                    repeat: '',\r\n                    size: '',\r\n                    opacity: 1,\r\n                },\r\n                backgroundMask: {\r\n                    composite: 'destination-out',\r\n                    cover: {\r\n                        color: {\r\n                            value: '#fff',\r\n                        },\r\n                        opacity: 1,\r\n                    },\r\n                    enable: false,\r\n                },\r\n                clear: true,\r\n                defaultThemes: {},\r\n                // ... (your existing options)\r\n                particles: {\r\n                    // ... (your existing particles options)\r\n                    groups: groupsArray, // Use the checked array here\r\n                },\r\n                // ... (your existing options)\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ParticleBg;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,MAAMN,QAAQ,CAACM,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGC,KAAK,CAACC,OAAO,CAACP,IAAI,CAACQ,MAAM,CAAC,GAAGR,IAAI,CAACQ,MAAM,GAAG,EAAE;EAEjE,oBACIV,OAAA,CAACH,SAAS;IACNc,EAAE,EAAC,aAAa;IAChBC,IAAI,EAAET,aAAc;IACpBU,OAAO,EAAE;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;QACRC,KAAK,EAAE;UACHC,KAAK,EAAE;QACX,CAAC;QACDC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE;MACb,CAAC;MACDC,cAAc,EAAE;QACZC,SAAS,EAAE,iBAAiB;QAC5BC,KAAK,EAAE;UACHT,KAAK,EAAE;YACHC,KAAK,EAAE;UACX,CAAC;UACDK,OAAO,EAAE;QACb,CAAC;QACDI,MAAM,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE,IAAI;MACXC,aAAa,EAAE,CAAC,CAAC;MACjB;MACAC,SAAS,EAAE;QACP;QACAnB,MAAM,EAAEH,WAAW,CAAE;MACzB;MACA;IACJ;EAAE;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACC,EAAA,GA9CIjC,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}